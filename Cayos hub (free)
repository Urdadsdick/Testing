-- Initialize OrionLib (Ensure it's accessible)
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()

local Window = OrionLib:MakeWindow({
    Name = "Cayos Hub for Street Wars 2",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "CayosHubConfig"
})

-- Debugging function
local function debugMessage(msg)
    print("[DEBUG]: " .. msg)
end

-- Global Variables
_G.autoMop = false
_G.autoPickup = false
_G.onePunch = false
_G.godMode = false
_G.flying = false
_G.speed = 50

-- GodMode
local function toggleGodMode()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:WaitForChild("Humanoid")

    if _G.godMode then
        humanoid.Health = humanoid.MaxHealth
        debugMessage("God Mode: Enabled")
    else
        debugMessage("God Mode: Disabled")
    end
end

-- Fly Functionality
local function startFly()
    if _G.flying then return end
    _G.flying = true
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    local bodyGyro = Instance.new("BodyGyro", humanoidRootPart)
    local bodyVelocity = Instance.new("BodyVelocity", humanoidRootPart)
    bodyGyro.P = 9e4
    bodyGyro.MaxTorque = Vector3.new(9e4, 9e4, 9e4)
    bodyGyro.CFrame = humanoidRootPart.CFrame
    bodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)

    debugMessage("Flying Enabled")

    while _G.flying do
        bodyGyro.CFrame = workspace.CurrentCamera.CFrame
        bodyVelocity.Velocity = workspace.CurrentCamera.CFrame.LookVector * _G.speed
        wait(0.1)
    end

    bodyGyro:Destroy()
    bodyVelocity:Destroy()
end

local function stopFly()
    _G.flying = false
    debugMessage("Flying Disabled")
end

-- One Punch Mode
local function enableOnePunch()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    humanoidRootPart.Touched:Connect(function(hit)
        local otherPlayer = game.Players:GetPlayerFromCharacter(hit.Parent)
        if _G.onePunch and otherPlayer and otherPlayer ~= player then
            local otherHumanoid = hit.Parent:FindFirstChild("Humanoid")
            if otherHumanoid then
                otherHumanoid.Health = 0
                debugMessage("One Punch: Killed " .. otherPlayer.Name)
            end
        end
    end)
end

-- Toggle One Punch Mode
local function toggleOnePunch(state)
    _G.onePunch = state
    if _G.onePunch then
        enableOnePunch()
    else
        debugMessage("One Punch: Disabled")
    end
end

-- Main Window Setup
local playerTab = Window:MakeTab({
    Name = "Player",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- God Mode Toggle
playerTab:AddToggle({
    Name = "God Mode",
    Default = false,
    Callback = function(state)
        _G.godMode = state
        toggleGodMode()
    end
})

-- Fly Controls
playerTab:AddButton({
    Name = "Fly",
    Callback = function()
        startFly()
    end
})

playerTab:AddButton({
    Name = "Stop Fly",
    Callback = function()
        stopFly()
    end
})

-- One Punch Toggle
playerTab:AddToggle({
    Name = "One Punch Mode",
    Default = false,
    Callback = toggleOnePunch
})

-- Auto Pickup Toggle (for items, etc.)
local usefulTab = Window:MakeTab({
    Name = "Useful",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

usefulTab:AddToggle({
    Name = "Auto Pickup",
    Default = false,
    Callback = function(state)
        _G.autoPickup = state
        debugMessage("Auto Pickup: " .. (state and "Enabled" or "Disabled"))
    end
})

-- Debug Logging
debugMessage("Script Loaded and Ready.")
