-- GUI Setup using OrionLib
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({
    Name = "Cayos Hub for Street Wars 2",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "CayosHubConfig"
})

-- Global Variables
_G.autoMop = false
_G.autoPickup = false
_G.onePunch = false
_G.godMode = false
_G.flying = false
_G.speed = 50
_G.noclip = false

-- ESP Tab (Outline everyone in green)
local espTab = Window:MakeTab({
    Name = "ESP",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

espTab:AddToggle({
    Name = "Outline Players",
    Default = false,
    Callback = function(state)
        if state then
            enableESP()
        else
            disableESP()
        end
    end
})

-- Function to enable ESP and outline all players in green
local function enableESP()
    for _, player in pairs(game.Players:GetPlayers()) do
        if player.Character then
            local humanoidRootPart = player.Character:FindFirstChild("HumanoidRootPart")
            if humanoidRootPart then
                local outline = Instance.new("SelectionBox")
                outline.Adornee = humanoidRootPart
                outline.Color3 = Color3.fromRGB(0, 255, 0)  -- Green color for outline
                outline.LineThickness = 0.05
                outline.Parent = player.Character
            end
        end
    end
end

-- Function to disable ESP and remove all outlines
local function disableESP()
    for _, player in pairs(game.Players:GetPlayers()) do
        for _, child in pairs(player.Character:GetChildren()) do
            if child:IsA("SelectionBox") then
                child:Destroy()
            end
        end
    end
end

-- Player Tab (Includes No Clip, Fly, Unfly, and Speed Slider)
local playerTab = Window:MakeTab({
    Name = "Player",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

playerTab:AddSlider({
    Name = "Walk Speed",
    Min = 16,
    Max = 100,
    Default = _G.speed,
    Callback = function(value)
        _G.speed = value
        local player = game.Players.LocalPlayer
        local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = _G.speed
        end
    end
})

playerTab:AddButton({
    Name = "Fly",
    Callback = function()
        startFly()
    end
})

playerTab:AddButton({
    Name = "Unfly",
    Callback = function()
        stopFly()
    end
})

playerTab:AddToggle({
    Name = "No Clip",
    Default = false,
    Callback = function(state)
        _G.noclip = state
        if _G.noclip then
            enableNoClip()
        else
            disableNoClip()
        end
    end
})

-- Functions for Fly, Unfly, and No Clip
local function startFly()
    _G.flying = true
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChild("Humanoid")
    local bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(400000, 400000, 400000)
    bodyVelocity.Velocity = Vector3.new(0, 0, 0)
    bodyVelocity.Parent = character:WaitForChild("HumanoidRootPart")
    
    local function flyingLoop()
        if not _G.flying then
            bodyVelocity:Destroy()
        end
        local velocity = Vector3.new(0, 0, 0)
        if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.Space) then
            velocity = Vector3.new(0, 50, 0)
        end
        bodyVelocity.Velocity = velocity
    end
    game:GetService("RunService").Heartbeat:Connect(flyingLoop)
end

local function stopFly()
    _G.flying = false
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local bodyVelocity = character:FindFirstChildOfClass("BodyVelocity")
    if bodyVelocity then
        bodyVelocity:Destroy()
    end
end

local function enableNoClip()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChild("Humanoid")
    local parts = character:GetChildren()
    
    for _, part in pairs(parts) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end
    
    character.HumanoidRootPart.Anchored = true
end

local function disableNoClip()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChild("Humanoid")
    local parts = character:GetChildren()
    
    for _, part in pairs(parts) do
        if part:IsA("BasePart") then
            part.CanCollide = true
        end
    end
    
    character.HumanoidRootPart.Anchored = false
end

-- Misc Tab (Includes God Mode, One Punch, etc.)
local miscTab = Window:MakeTab({
    Name = "Misc",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

miscTab:AddToggle({
    Name = "God Mode",
    Default = false,
    Callback = function(state)
        if state then
            enableGodMode()
        else
            disableGodMode()
        end
    end
})

miscTab:AddToggle({
    Name = "One Punch",
    Default = false,
    Callback = function(state)
        _G.onePunch = state
        enableOnePunch()
    end
})

-- Functions (God Mode, One Punch, etc.)
local function enableGodMode()
    if _G.godMode then return end
    _G.godMode = true
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoid = character:FindFirstChild("Humanoid")

    humanoid:GetPropertyChangedSignal("Health"):Connect(function()
        if _G.godMode and humanoid.Health < humanoid.MaxHealth then
            humanoid.Health = humanoid.MaxHealth
        end
    end)
end

local function disableGodMode()
    _G.godMode = false
end

local function enableOnePunch()
    local player = game.Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")

    humanoidRootPart.Touched:Connect(function(hit)
        local otherPlayer = game.Players:GetPlayerFromCharacter(hit.Parent)
        if _G.onePunch and otherPlayer and otherPlayer ~= player then
            local otherHumanoid = hit.Parent:FindFirstChild("Humanoid")
            if otherHumanoid then
                otherHumanoid.Health = 0
            end
        end
    end)
end

-- Initialize GUI
OrionLib:Init()
