if game.PlaceId == 11177482306 then
    -- Load Orion UI
    local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()

    -- Create Main Window
    local Window = OrionLib:MakeWindow({
        Name = "Goated Hub - Street Wars 2",
        HidePremium = false,
        SaveConfig = true,
        ConfigFolder = "GoatedHub"
    })

    -- Initialize Variables
    local _G = {
        autoFarm = false,
        autoPickup = false,
        godMode = false,
        walkSpeed = 16,
        espEnabled = false,
        infiniteAmmo = false,
        onePunch = false,
        flySpeed = 50,
        flying = false
    }

    local bodyVelocity, bodyGyro

    -- Player Tab
    local playerTab = Window:MakeTab({
        Name = "Player",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    -- Walk Speed Slider
    playerTab:AddSlider({
        Name = "Walk Speed",
        Min = 16,
        Max = 100,
        Default = 16,
        Increment = 1,
        Callback = function(value)
            _G.walkSpeed = value
            if game.Players.LocalPlayer.Character then
                local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                if humanoid then
                    humanoid.WalkSpeed = value
                end
            end
        end
    })

    -- Walk Speed Text Box (For Mobile Users)
    playerTab:AddTextbox({
        Name = "Set Walk Speed",
        Default = "16",
        TextDisappear = true,
        Callback = function(value)
            local speed = tonumber(value)
            if speed then
                _G.walkSpeed = speed
                if game.Players.LocalPlayer.Character then
                    local humanoid = game.Players.LocalPlayer.Character:FindFirstChild("Humanoid")
                    if humanoid then
                        humanoid.WalkSpeed = speed
                    end
                end
            end
        end
    })

    -- God Mode Toggle
    playerTab:AddToggle({
        Name = "God Mode",
        Default = false,
        Callback = function(state)
            _G.godMode = state
            while _G.godMode do
                local character = game.Players.LocalPlayer.Character
                if character and character:FindFirstChild("Humanoid") then
                    character.Humanoid.Health = math.huge
                end
                wait(0.1)
            end
        end
    })

    -- Noclip Toggle
    playerTab:AddToggle({
        Name = "Noclip",
        Default = false,
        Callback = function(state)
            local noclip = state
            game:GetService("RunService").Stepped:Connect(function()
                if noclip and game.Players.LocalPlayer.Character then
                    for _, part in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                        if part:IsA("BasePart") and part.CanCollide then
                            part.CanCollide = false
                        end
                    end
                end
            end)
        end
    })

    -- Fly Function
    local function startFly()
        if _G.flying then return end
        _G.flying = true
        local rootPart = game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if rootPart then
            bodyVelocity = Instance.new("BodyVelocity", rootPart)
            bodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)
            bodyVelocity.Velocity = Vector3.zero

            bodyGyro = Instance.new("BodyGyro", rootPart)
            bodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
            bodyGyro.CFrame = rootPart.CFrame

            game:GetService("RunService").RenderStepped:Connect(function()
                if _G.flying then
                    local moveDirection = Vector3.zero
                    local camera = workspace.CurrentCamera
                    local userInputService = game:GetService("UserInputService")

                    if userInputService:IsKeyDown(Enum.KeyCode.W) then
                        moveDirection = moveDirection + camera.CFrame.LookVector
                    end
                    if userInputService:IsKeyDown(Enum.KeyCode.S) then
                        moveDirection = moveDirection - camera.CFrame.LookVector
                    end
                    if userInputService:IsKeyDown(Enum.KeyCode.A) then
                        moveDirection = moveDirection - camera.CFrame.RightVector
                    end
                    if userInputService:IsKeyDown(Enum.KeyCode.D) then
                        moveDirection = moveDirection + camera.CFrame.RightVector
                    end

                    bodyVelocity.Velocity = moveDirection.Unit * _G.flySpeed
                    bodyGyro.CFrame = camera.CFrame
                end
            end)
        end
    end

    -- Unfly Function
    local function stopFly()
        _G.flying = false
        if bodyVelocity then bodyVelocity:Destroy() end
        if bodyGyro then bodyGyro:Destroy() end
    end

    -- Add Fly Button
    playerTab:AddButton({
        Name = "Fly",
        Callback = function()
            startFly()
        end
    })

    -- Add Unfly Button
    playerTab:AddButton({
        Name = "Unfly",
        Callback = function()
            stopFly()
        end
    })

    -- Farming Tab
    local farmingTab = Window:MakeTab({
        Name = "Farming",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    -- Auto Farm Toggle
    farmingTab:AddToggle({
        Name = "Auto Farm",
        Default = false,
        Callback = function(state)
            _G.autoFarm = state
            while _G.autoFarm do
                local mop = game.Players.LocalPlayer.Backpack:FindFirstChild("Mop")
                local character = game.Players.LocalPlayer.Character
                if mop and character then
                    mop.Parent = character
                    for _, spot in pairs(workspace:GetDescendants()) do
                        if spot.Name == "FloorSpot" and spot:IsA("Part") then
                            character.HumanoidRootPart.CFrame = spot.CFrame
                            fireproximityprompt(spot:FindFirstChildOfClass("ProximityPrompt"))
                            wait(0.2)
                        end
                    end
                end
                wait(1)
            end
        end
    })

    -- Auto Pickup Toggle
    farmingTab:AddToggle({
        Name = "Auto Pickup",
        Default = false,
        Callback = function(state)
            _G.autoPickup = state
            while _G.autoPickup do
                for _, item in pairs(workspace:GetDescendants()) do
                    if item:IsA("Tool") or item.Name == "Cash" then
                        item.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
                    end
                end
                wait(0.5)
            end
        end
    })

    -- ESP Tab
    local espTab = Window:MakeTab({
        Name = "ESP",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    -- ESP Toggle
    espTab:AddToggle({
        Name = "Enable ESP",
        Default = false,
        Callback = function(state)
            _G.espEnabled = state
            while _G.espEnabled do
                for _, player in pairs(game.Players:GetPlayers()) do
                    if player ~= game.Players.LocalPlayer and player.Character then
                        local highlight = player.Character:FindFirstChildOfClass("Highlight") or Instance.new("Highlight", player.Character)
                        highlight.FillColor = Color3.new(0, 1, 0)
                        highlight.OutlineColor = Color3.new(1, 1, 1)
                    end
                end
                wait(0.5)
            end
        end
    })

    -- Trolling Tab
    local trollingTab = Window:MakeTab({
        Name = "Trolling",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    -- One Punch Toggle
    trollingTab:AddToggle({
        Name = "One Punch",
        Default = false,
        Callback = function(state)
            _G.onePunch = state
            while _G.onePunch do
                for _, player in pairs(game.Players:GetPlayers()) do
                    if player ~= game.Players.LocalPlayer and player.Character then
                        local humanoid = player.Character:FindFirstChild("Humanoid")
                        if humanoid then
                            humanoid.Health = 0
                        end
                    end
                end
                wait(0.5)
            end
        end
    })

    -- Credits Tab
    local creditsTab = Window:MakeTab({
        Name = "Credits",
        Icon = "rbxassetid://4483345998",
        PremiumOnly = false
    })

    creditsTab:AddLabel("Developed by yooo0684 on Discord")
    creditsTab:AddButton({
        Name = "Join Discord",
        Callback = function()
            setclipboard("https://discord.gg/DvgnsUp3")
        end
    })

    -- Finish UI Setup
    OrionLib:Init()
end
