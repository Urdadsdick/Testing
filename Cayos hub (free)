-- Set the required key and discord URL
local keyRequired = "key"  -- The key to load the script
local keyUrl = "https://discord.gg/ADQUB6W7"  -- Link for getting the key

-- Function to load all features of the script
local function loadScriptFeatures()
    -- Load the Orion library for GUI
    local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()
    local Window = OrionLib:MakeWindow({
        Name = "Goated Hub - Key System",
        HidePremium = false,
        SaveConfig = true,
        ConfigFolder = "GoatedHub"
    })
    
    -- Setup necessary services
    local players = game:GetService("Players")
    local plr = players.LocalPlayer
    local workspace = game:GetService("Workspace")
    local replicatedStorage = game:GetService("ReplicatedStorage")

    -- Settings and state variables
    local settings = {
        walkSpeed = 16,
        godMode = false,
        onePunch = false,
        autoPickup = false,
        autoFarm = false,
        espEnabled = false,
        flyEnabled = false
    }

    -- Function to toggle God Mode
    local function enableGodMode()
        settings.godMode = true
        while settings.godMode do
            local character = plr.Character
            if character then
                local humanoid = character:FindFirstChildOfClass("Humanoid")
                if humanoid then
                    humanoid.Health = humanoid.MaxHealth
                end
            end
            wait(0.1)
        end
    end

    -- Disable God Mode
    local function disableGodMode()
        settings.godMode = false
    end

    -- Function to enable One Punch Kill
    local function enableOnePunch()
        settings.onePunch = true
        while settings.onePunch do
            for _, player in pairs(players:GetPlayers()) do
                if player ~= plr and player.Character then
                    local character = player.Character
                    local humanoid = character:FindFirstChildOfClass("Humanoid")
                    if humanoid then
                        humanoid.Health = 0  -- Instantly kill the player
                    end
                end
            end
            wait(0.1)
        end
    end

    -- Disable One Punch Kill
    local function disableOnePunch()
        settings.onePunch = false
    end

    -- Function to enable Auto Pickup
    local function enableAutoPickup()
        settings.autoPickup = true
        while settings.autoPickup do
            local root = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
            if root then
                for _, item in pairs(workspace:GetDescendants()) do
                    if item:IsA("Tool") or item.Name == "Cash" then
                        pcall(function()
                            item.CFrame = root.CFrame -- Move item to the player
                        end)
                    end
                end
            end
            wait(0.5)
        end
    end

    -- Disable Auto Pickup
    local function disableAutoPickup()
        settings.autoPickup = false
    end

    -- Function to toggle ESP
    local function enableESP()
        settings.espEnabled = true
        while settings.espEnabled do
            for _, player in pairs(players:GetPlayers()) do
                if player ~= plr and player.Character then
                    local highlight = player.Character:FindFirstChildOfClass("Highlight") or Instance.new("Highlight", player.Character)
                    highlight.FillColor = Color3.new(math.random(), math.random(), math.random())
                    highlight.OutlineColor = Color3.new(1, 1, 1)
                end
            end
            wait(0.5)
        end
    end

    -- Disable ESP
    local function disableESP()
        settings.espEnabled = false
    end

    -- Start Fly
    local function startFly()
        local root = plr.Character:FindFirstChild("HumanoidRootPart")
        if root then
            local bodyGyro = Instance.new("BodyGyro", root)
            local bodyVelocity = Instance.new("BodyVelocity", root)
            bodyGyro.P = 9e4
            bodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
            bodyGyro.CFrame = root.CFrame
            bodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)
            bodyVelocity.Velocity = Vector3.zero

            game:GetService("RunService").RenderStepped:Connect(function()
                bodyGyro.CFrame = root.CFrame
                bodyVelocity.Velocity = root.CFrame.LookVector * 50
            end)
        end
    end

    -- Stop Fly
    local function stopFly()
        -- This part is a little tricky. You might need additional logic to stop flying.
    end

    -- TELEPORT TAB
    local teleportTab = Window:MakeTab({ Name = "Teleport", Icon = "rbxassetid://4483345998", PremiumOnly = false })

    teleportTab:AddButton({
        Name = "Apt2",
        Callback = function()
            plr.Character:MoveTo(Vector3.new(2569.16, 34.81, -115.59))
        end
    })

    -- Add more buttons for other teleports...

    -- PLAYERS TAB
    local playersTab = Window:MakeTab({ Name = "Players", Icon = "rbxassetid://4483345998", PremiumOnly = false })

    playersTab:AddToggle({
        Name = "One Punch Kill",
        Default = false,
        Callback = function(value)
            if value then
                enableOnePunch()
            else
                disableOnePunch()
            end
        end
    })

    -- Features Tab
    local featuresTab = Window:MakeTab({ Name = "Features", Icon = "rbxassetid://4483345998", PremiumOnly = false })

    featuresTab:AddToggle({
        Name = "God Mode",
        Default = false,
        Callback = function(value)
            if value then
                enableGodMode()
            else
                disableGodMode()
            end
        end
    })

    -- Add more features...

end

-- Function to listen for the correct key input
local function checkKey()
    -- Display message if key is incorrect
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Goated Hub - Key System",
        Text = "Press the 'key' to unlock features!",
        Duration = 5
    })

    -- Wait until the key is entered
    game:GetService("UserInputService").InputBegan:Connect(function(input)
        if input.KeyCode == Enum.KeyCode[keyRequired] then
            loadScriptFeatures()  -- Load the script features once the correct key is entered
        else
            -- Optionally add logic to handle incorrect keys
        end
    end)
end

checkKey()  -- Start checking for the key press
